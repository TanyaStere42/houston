"""empty message

Revision ID: f5240055f6f0
Revises: e83e2897dd6c
Create Date: 2021-09-14 21:45:04.121837

"""

# revision identifiers, used by Alembic.
revision = 'f5240055f6f0'
down_revision = 'e83e2897dd6c'

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

from sqlalchemy.dialects import postgresql

import app
import app.extensions



def upgrade():
    """
    Upgrade Semantic Description:
        ENTER DESCRIPTION HERE
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('collaboration', schema=None) as batch_op:
        # start with nullable=True on initiator_guid for any existing collaborations...
        batch_op.add_column(sa.Column('initiator_guid', app.extensions.GUID(), nullable=True))

        batch_op.add_column(sa.Column('edit_initiator_guid', app.extensions.GUID(), nullable=True))
        batch_op.create_index(batch_op.f('ix_collaboration_edit_initiator_guid'), ['edit_initiator_guid'], unique=False)
        batch_op.create_index(batch_op.f('ix_collaboration_initiator_guid'), ['initiator_guid'], unique=False)
        batch_op.create_foreign_key(batch_op.f('fk_collaboration_edit_initiator_guid_user'), 'user', ['edit_initiator_guid'], ['guid'])
        batch_op.create_foreign_key(batch_op.f('fk_collaboration_initiator_guid_user'), 'user', ['initiator_guid'], ['guid'])

    # now this should set values on initiator_guid, so we can set nullable=False below
    op.execute("UPDATE collaboration SET initiator_guid=(SELECT user_guid FROM collaboration_user_associations WHERE collaboration_guid=collaboration.guid AND initiator='t')");
    # this gets edit_initiator as a bonus
    op.execute("UPDATE collaboration SET edit_initiator_guid=(SELECT user_guid FROM collaboration_user_associations WHERE collaboration_guid=collaboration.guid AND edit_initiator='t')");

    # and here we set nullable=False once we have values in
    with op.batch_alter_table('collaboration', schema=None) as batch_op:
        batch_op.alter_column('initiator_guid', existing_type=postgresql.UUID(), nullable=False)


    with op.batch_alter_table('collaboration_user_associations', schema=None) as batch_op:
        batch_op.drop_column('edit_initiator')
        batch_op.drop_column('initiator')

    # ### end Alembic commands ###


def downgrade():
    """
    Downgrade Semantic Description:
        ENTER DESCRIPTION HERE
    """
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('collaboration_user_associations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('initiator', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('edit_initiator', sa.BOOLEAN(), autoincrement=False, nullable=False))

    with op.batch_alter_table('collaboration', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_collaboration_initiator_guid_user'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_collaboration_edit_initiator_guid_user'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_collaboration_initiator_guid'))
        batch_op.drop_index(batch_op.f('ix_collaboration_edit_initiator_guid'))
        batch_op.drop_column('edit_initiator_guid')
        batch_op.drop_column('initiator_guid')

    # ### end Alembic commands ###
